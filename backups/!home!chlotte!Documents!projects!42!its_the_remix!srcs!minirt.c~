#include "../inc/minirt.h"

bool	ft_setup(t_mlx_obj *mlx, t_mlx_img *img, t_vec2i res, t_vec2f *pixel)
{
	mlx->win_ptr = mlx_new_window(mlx->mlx_ptr, res.x, res.y, "miniRT");
	img->img_ptr = mlx_new_image(mlx->mlx_ptr, res.x, res.y);
	if (mlx->win_ptr == NULL || img->img_ptr == NULL)
		return (false);
	*pixel = (t_vec2f){0.0, 0.0};
	return (true);
}

int	main(int ac, char **av)
{
	t_vec2f		pixel;
//	t_rgb		pixel_color;
	t_scene		s;	
	t_mlx_obj	mlx;
	t_mlx_img	img;

	mlx.mlx_ptr = mlx_init();
	parse_scene(ac, av, &s, mlx.mlx_ptr);
	if (!ft_setup(&mlx, &img, s.win_res, &pixel))
		exit(0);
	printf("setup ok\n");
/* 	while (pixel.y <= s.win_res.y) */
/* 	{ */
/* 		while (pixel.x <= s.win_res.x) */
/* 		{ */
/* 			pixel_color = get_pixel_color(pixel, s.obj_list, */
/* 						      s.cam_list[0], s.win_res); */
/* 			write_to_image(pixel_color, pixel, &img); */
/* 			pixel.x++; */
/* 		} */
/* 		pixel.x = 0; */
/* 		pixel.y++; */
/* 	} */
/* 	free(s.obj_list); */
/* 	free(s.cam_list); */
/* 	mlx_put_image_to_window(mlx.mlx_ptr, mlx.win_ptr, img.img_ptr, 0, 0); */
/* 	printf("main loop exited. congrats\n"); */
/* 	mlx_key_hook(mlx.win_ptr, ft_exit, &mlx); */
/* 	mlx_loop(mlx.mlx_ptr); */
	return (0);
}
