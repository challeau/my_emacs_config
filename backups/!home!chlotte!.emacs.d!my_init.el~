;;; PACKAGES ;;;

(when (>= emacs-major-version 24)
  (require 'package)
  (add-to-list 'package-archives
             '("tromey" . "http://tromey.com/elpa/") t)
  (add-to-list 'package-archives
             '("melpa" . "http://melpa.milkbox.net/packages/") t)
  (add-to-list 'package-archives
             '("melpa-stable" . "http://stable.melpa.org/packages/") t)
  (add-to-list 'package-pinned-packages '(cider . "melpa-stable") t)
  (add-to-list 'package-pinned-packages '(magit . "melpa-stable") t)
  )

(use-package powerline
  :ensure t
  :config (powerline-default-theme)
  )

(use-package company
  :ensure t
  :config (global-company-mode)
  )

(use-package flycheck
  :ensure t
  :config (global-flycheck-mode)
  )

(use-package yasnippet
   :ensure t
   :config
   (yas-global-mode t)
   (yas-reload-all)
   )

(when (not package-archive-contents)
  (package-refresh-contents)
  )

(package-initialize)

(defvar my-packages
  '(
    autothemer
    gruvbox-theme
    paredit
    clojure-mode
    clojure-mode-extra-font-locking
    cider
    smex
    rainbow-delimiters
    tagedit
    magit)
  )

(dolist (p my-packages)
  (when (not (package-installed-p p))
    (package-install p))
  )

;;; STARTUP ;;;
(setq inhibit-startup-message t)
(add-hook 'window-setup-hook 'toggle-frame-fullscreen t)	;; Puts emacs in fullscreen on startup

(split-window-right)						;; Defines windows setup on startup
(windmove-right)
(split-window)
(windmove-down)
(eshell)
(windmove-left)

;;; NAVIGATION ;;;
(setq recentf-save-file (concat user-emacs-directory ".recentf"))	;; Remembers recent commands
(require 'recentf)
(recentf-mode 1)
(setq recentf-max-menu-items 40)

(setq read-file-name-completion-ignore-case t)				;; Insensitivity to case in
									;; completion
(setq smex-save-file (concat user-emacs-directory ".smex-items"))	;; Makes it easier to browse
(smex-initialize)							;; options in M-x
(global-set-key (kbd "M-x") 'smex)

;;; CUSTOMIZATION ;;;
(menu-bar-mode -1)			;; Removes the menu/tool bar
(tool-bar-mode -1)
(toggle-scroll-bar -1)

(setq ring-bell-function 'ignore)	;; Shuts the ring
(global-linum-mode)			;; Adds line numbers

(add-to-list 'custom-theme-load-path "~/.emacs.d/themes/")     ;;; Theme

;;; EDITING ;;;
(show-paren-mode 1)					;; Highlights matching parentheses
(add-hook 'prog-mode-hook #'rainbow-delimiters-mode)	;; Colors parentheses
(global-hl-line-mode 1)					;; Highlights current line

(setq c-default-style "linux"
      c-basic-offset 4)					;; Defines tab size for c

(setq backup-directory-alist `(("." . ,(concat user-emacs-directory
                                               "backups"))))
(setq auto-save-default nil)				;; Puts backup files in a directory

;;; MISC ;;;
(fset 'yes-or-no-p 'y-or-n-p)			;; Changes all (yes or no) questions to (y or n)
(setq create-lockfiles nil)			;; Disables the creation of #x files during edition

;;; CLOJURE/ELISP SETUP ;;;
(add-to-list 'load-path "~/.emacs.d/customizations")
(load "setup-clojure.el")
(load "setup-js.el")
(load "elisp-editing.el")

;;; KEY BINDINGS ;;;
(global-set-key (kbd "C-x c") 'kill-ring-save)
(global-set-key (kbd "C-x x") 'kill-region)
(global-set-key (kbd "C-x p") 'yank)

(global-set-key (kbd "M-;") 'comment-or-uncomment-region)
(global-set-key (kbd "C-c C-c") 'comment-line)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(coffee-tab-width 2)
 '(custom-safe-themes
   (quote
    ("b89ae2d35d2e18e4286c8be8aaecb41022c1a306070f64a66fd114310ade88aa" "aded61687237d1dff6325edb492bde536f40b048eab7246c61d5c6643c696b7f" "cf08ae4c26cacce2eebff39d129ea0a21c9d7bf70ea9b945588c1c66392578d1" "9e54a6ac0051987b4296e9276eecc5dfb67fdcd620191ee553f40a9b6d943e78" default))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
