#include "../minirt.h"

bool		(**scene_set_init(void))(char **attributes, t_scene *scene){
	static bool	(*scene_set[2])(char **attributes, t_scene *scene);

	scene_set[0] = &set_res;
	scene_set[1] = &set_ambl;
	return (&scene_set[0]);
}


t_object	(**obj_set_init(void))(char **attributes, t_scene *scene){
	static t_object	(*obj_set[7])(char **attributes, t_scene *scene);

	obj_set[0] = &set_cam;
	obj_set[1] = &set_light;
	obj_set[2] = &set_sphere;
	obj_set[3] = &set_plane;
	obj_set[4] = &set_square;
	obj_set[5] = &set_cylinder;
	obj_set[6] = &set_triangle;
	return (&obj_set[0]);
}

int	id_index(char *id){
	int	i;
	static const char	*identifier_array[__OBJ_TOTAL] = {
		"R","A","c","l","sp","pl","sq",	"cy", "tr",
	};

	i = 0;
	while (i < __OBJ_TOTAL - 1){
		if (ft_strcmp(id, identifier_array[i]) == 0)
			return (i);
		i++;
	}
	return (-1);
}

bool	assign_obj(char **attributes, t_scene *scene){
	int		enum_val;
	t_object	new;
	bool		(**scene_set)(char **attributes, t_scene *scene);
	t_object	(**obj_set)(char **attributes, t_scene *scene);
	

	scene_set = scene_set_init();
	obj_set = obj_set_init();
	enum_val = id_index(attributes[0]);
	if (enum_val == 0 || enum_val == 1){
		return (scene_set[enum_val](attributes, scene));
	}
	else if (enum_val > 1){
		obj_set[enum_val](attributes, scene);
		if (new.type == e_OBJ_NONE)
			return (false);
		new.type = enum_val;
		add_obj2lst(&scene->obj_list, new_obj_lst(new));
		return (true);
	}
	return (true);
}

t_scene	get_scene(int fd){
	char	*line;
	char	**attributes;
	t_scene	scene;

	while (get_next_line(fd, &line) > 0)
	{
		if (*line != '\0'){
			attributes = ft_split(line, ' ');
			if (assign_obj(attributes, &scene) == false)
				write(1, "No <3", 6);
			ft_memdel(line);
		}
	}
	add_obj2lst(&scene.obj_list, new_obj_lst((t_object){.type = e_OBJ_NONE}));
	return (scene);
}

t_scene	parser(__attribute((unused))int ac, char **av){
	int	fd;
	t_scene scene;

	fd = open(av[1], O_RDONLY);
	scene = get_scene(fd);
	close(fd);
	return(scene);
}

	/* t_scene	scene; */
	/* t_object	sphere = (t_object){ */
	/* 		.type = e_OBJ_SPHERE, */
	/* 		.pos  = {0,1,4}, */
	/* 		.color = {255,255,255}, */
	/* 		.data.sphere.r = 1., */
	/* }; */
	/* t_object	plane = (t_object){ */
	/* 	.type = e_OBJ_PLANE, */
	/* 	.pos = {0,1,0}, */
	/* 	.data.plane.orientation = (t_vec3){0,1,0}, */
	/* }; */
	/* t_object	none = (t_object){ */
	/* 	.type = e_OBJ_NONE, */
	/* }; */
	/* scene.res = (t_vec2){500, 500}; */
	/* scene.cam = (t_cam){(t_vec3){0, 1, 0}, (t_vec3){0, 0, 0}, 180}; */
	/* scene.obj_list = new_obj_lst(sphere); */
	/* add_obj2lst(&scene.obj_list, new_obj_lst(plane)); */
	/* add_obj2lst(&scene.obj_list, new_obj_lst(none)); */
