import os
import pickle
import datetime
from prettytable import PrettyTable

# check if the program has been run before.
# if not, parse webpage to create the fish list.
if os.path.exists(".fish_soup") is False:
    os.system('touch .fish_soup')
    print("creating fish soup...")
    os.system('python3 .fish_soup.py')
fish_list = pickle.load(open(".fish_soup", "rb"))

# check if the program has been run before.
# if not, create tag file and initialize the caught list.
# if it is, ask if use wishes to update the caught list.
caught_fish_list = {}
if os.path.exists(".tag.txt") is False:
    os.system('touch .tag.txt')
    f = open(".tag.txt", "r+")
    print("Welcome! Let's see what fish you've caught so far!\n")
    for fish in fish_list:
        status = None
        while status not in ("y", "n"):
            status = input('Have you caught a ' + str(fish) + ' yet? (y/n)\n>>> ')
            if (status == "y"):
                f.write(str(fish))
                f.write("\n")
            elif (status != "n"):
                status = input("I did not understand this. Answer with y or n.\n>>> ")
else:
    f = open(".tag.txt", "r+")
    caught_fish_list = f.read().splitlines()
    status = None
    while status not in ("y", "n"):
        status = input("Welcome back! Have you caught any new fish since last time ? (y/n)?\n>>> ")
        if (status == "y"):
            for fish in fish_list:
                if fish not in caught_fish_list:
                    status = None
                    while status not in ("y", "n"):
                        status = input('Have you caught a ' + str(fish) + ' yet? (y/n)\n>>> ')
                        if (status == "y"):
                            print("Congratulations! Adding your catch to the list...")
                            f.write(str(fish))
                            f.write("\n")
                        elif (status != "n"):
                            status = input("I did not understand this. Answer with y or n.\n>>> ")
        elif (status != "n"):
            status = input("I did not understand this. Answer with y or n.\n>>> ")
    f.close()
    f = open(".tag.txt", "r+")
    caught_fish_list = f.read().splitlines()

# create current_fish list: fish that is available right now
# today = datetime.datetime.today()
today = datetime.datetime(2020, 11, 3, 12, 20)
current_fish = {}
for fish in fish_list:
    if fish_list[fish]['season'][str(today.month)] == 1:
        if fish_list[fish]['time'] == 'All day':
            current_fish[fish] = fish_list[fish]
        elif fish_list[fish]['time'] == '4 AM - 9 PM' and today.hour >= 4 and today.hour < 21:
            current_fish[fish] = fish_list[fish]
        elif fish_list[fish]['time'] == '9 AM - 4 PM' and today.hour >= 9 and today.hour < 16:
            current_fish[fish] = fish_list[fish]
        elif fish_list[fish]['time'] == '4 PM - 9 AM' and (today.hour >= 16 or today.hour < 9):
            current_fish[fish] = fish_list[fish]
        elif fish_list[fish]['time'] == '9 PM - 4 AM' and (today.hour >= 21 or today.hour < 4):
            current_fish[fish] = fish_list[fish]
        elif fish_list[fish]['time'] == '9 AM - 4 PM & 9 PM - 4 AM' and ((today.hour >= 9 and today.hour < 16) or (today.hour >= 21 or today.hour < 4)):
            current_fish[fish] = fish_list[fish]

# define status.
for fish in current_fish:
    if fish in caught_fish_list:
        current_fish[fish]['caught'] = '✔'
    else:
        current_fish[fish]['caught'] = '✘'

# create a tab with all the data and print it.
tab = PrettyTable()
tab.field_names = ['NAME', 'PRICE', 'RARITY', 'SIZE', 'LOCATION', 'CAUGHT ?']
for fish in current_fish:
    if fish not in caught_fish_list:
        tab.add_row([fish, current_fish[fish]['price'], current_fish[fish]['rarity'], current_fish[fish]['size'], current_fish[fish]['location'], current_fish[fish]['caught']])
for fish in current_fish:
    if fish in caught_fish_list:
        tab.add_row([fish, current_fish[fish]['price'], current_fish[fish]['rarity'], current_fish[fish]['size'], current_fish[fish]['location'], current_fish[fish]['caught']])

print("\nHere's a list of available fish right now:")
print(tab)
