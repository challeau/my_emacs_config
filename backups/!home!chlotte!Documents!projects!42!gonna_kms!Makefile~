NAME		=	minirt

SRC_PATH	=	./srcs
SRC_NAME	=	minirt.c	\
			vectr_fcts.c	\
			float_tools.c

SRC_PARSER_PATH	=	./srcs/parser
SRC_PARSER_NAME	=	scene_parser.c		\
			elem_set_fcts.c		\
			elem_set_fcts_2.c	\
			parser_tools.c

SRC_RAYMARCH_PATH	=	./srcs/raymarch
SRC_RAYMARCH_NAME	=	raymarch.c		\
				raymarch_tools.c	\
				sdfs_srcs.c

SRC_TOOLS_PATH	=	./srcs/tools
SRC_TOOLS_PATH	=	vectr_fcts.c	\
			float_tools.c

OBJ_PATH	=	objs
OBJ_NAME	=	$(SRC_NAME:.c=.o)

OBJ_PARSER_PATH	=	objs/parser
OBJ_PARSER_NAME	=	$(SRC_PARSER_NAME:.c=.o)

OBJ_RAYMARCH_PATH	=	objs/raymarch
OBJ_RAYMARCH_NAME	=	$(SRC_RAYMARCH_NAME:.c=.o)

OBJ_TOOLS_PATH	=	objs/tools
OBJ_TOOLS_NAME	=	$(SRC_TOOLS_NAME:.c=.o)

CC		=	clang
CFLAGS		=	-Wall -Werror -Wextra -g 

CPPFLAGS	=	-I inc/Libft/ -I inc/minilibx-linux/

LDFLAGS		=	inc/Libft/libft.a inc/minilibx-linux/libmlx_Linux.a
LDLIBS		=	-lmlx -lm -lX11 -lXext

SRC = $(addprefix $(SRC_PATH)/,$(SRC_NAME))
OBJ = $(addprefix $(OBJ_PATH)/,$(OBJ_NAME))

SRC_PARSER = $(addprefix $(SRC_PARSER_PATH)/,$(SRC_PARSER_NAME))
OBJ_PARSER = $(addprefix $(OBJ_PARSER_PATH)/,$(OBJ_PARSER_NAME))

SRC_RAYMARCH = $(addprefix $(SRC_RAYMARCH_PATH)/,$(SRC_RAYMARCH_NAME))
OBJ_RAYMARCH = $(addprefix $(OBJ_RAYMARCH_PATH)/,$(OBJ_RAYMARCH_NAME))

SRC_TOOLS = $(addprefix $(SRC_TOOLS_PATH)/,$(SRC_TOOLS_NAME))
OBJ_TOOLS = $(addprefix $(OBJ_TOOLS_PATH)/,$(OBJ_TOOLS_NAME))

all: $(NAME)

$(NAME): $(OBJ) $(OBJ_PARSER) $(OBJ_RAYMARCH) $(OBJ_TOOLS)
	@make -C inc/Libft
	@make -C inc/minilibx-linux
	@$(CC) $^ -o $@ $(LDFLAGS) $(LDLIBS)
	@echo "Compilation \033[1;32mOK\033[m"

$(OBJ_PATH)/%.o: $(SRC_PATH)/%.c
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	@$(CC) $(CFLAGS) -c $< $(CPPFLAGS) -o $@

$(OBJ_PARSER_PATH)/%.o: $(SRC_PARSER_PATH)/%.c
	@mkdir $(OBJ_PARSER_PATH) 2> /dev/null || true
	@$(CC) $(CFLAGS) -c $< $(CPPFLAGS) -o $@

$(OBJ_RAYMARCH_PATH)/%.o: $(SRC_RAYMARCH_PATH)/%.c
	@mkdir $(OBJ_RAYMARCH_PATH) 2> /dev/null || true
	@$(CC) $(CFLAGS) -c $< $(CPPFLAGS) -o $@

$(OBJ_TOOLS_PATH)/%.o: $(SRC_TOOLS_PATH)/%.c
	@mkdir $(OBJ_TOOLS_PATH) 2> /dev/null || true
	@$(CC) $(CFLAGS) -c $< $(CPPFLAGS) -o $@

clean:
	@make -C inc/Libft clean
	@rm -f $(OBJ)
	@rmdir $(OBJ_PATH) 2> /dev/null || true
	@echo "Removing objs"

fclean: clean
	@make -C inc/Libft fclean
	@rm -f $(NAME)

re: fclean all

.PHONY: all, clean, fclean, re
