#include "../minirt.h"

bool	ft_setup(t_mlx_obj *mlx, t_mlx_img *img, t_vec2 *pixel, t_scene scene)
{
	mlx->mlx_ptr = mlx_init();
	mlx->win_ptr = mlx_new_window(mlx->mlx_ptr, scene.res.x, scene.res.y, "miniRT");
	img->img_ptr = mlx_new_image(mlx->mlx_ptr, scene.res.x, scene.res.y);
	if (mlx->win_ptr == NULL)
		return (false);
	*pixel = (t_vec2){0, 0};

	return (true);
}

float	(**ret_pf_array(void))(t_vec3 p, t_object obj)
{
	static float	(*ret_fptr_array[__OBJ_TOTAL])(t_vec3, t_object) =
		{[e_OBJ_SPHERE] = &sdf_sphere, [e_OBJ_PLANE] = &sdf_plane};

	return (&ret_fptr_array[0]);
}

int	main(int ac, char **av)
{
	t_scene		scene;
	t_vec2		pixel;
	t_vec3		color;
	t_mlx_obj	mlx;
	t_mlx_img	img;

	scene = parser(ac, av);
	if (scene.is_set == false){
		write(1, "No henny <3\n", 12);
		return (0);
	}
	ft_setup(&mlx, &img, &pixel, scene);
	printf("setup ok\n");
	while (pixel.y <= scene.res.y)
	{
		while (pixel.x <= scene.res.y)
		{
			color = get_pixel_color(scene, pixel);
			write2image(color, img, pixel, scene);
			pixel.x++;
		}
		pixel.x = 0;
		pixel.y++;
	}
	mlx_put_image_to_window(mlx.mlx_ptr, mlx.win_ptr, img.img_ptr, 0, 0);
	mlx_key_hook(mlx.win_ptr, ft_exit, &mlx);
	mlx_loop(mlx.mlx_ptr);
	return (0);
}
