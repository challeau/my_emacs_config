#include "../../minirt.h"

bool	set_res(char **attributes, t_scene *scene){
	int x;
	int y;

	if (!check_attributes_num(attributes, 3))
		return (false);
	x = ft_atoi(attributes[1]);
	y = ft_atoi(attributes[2]);
	if (x <= 0 || y <= 0)
		return (false);
	scene->res.x = x;
	scene->res.y = y;
	return (true);
}

bool	set_ambl(char **attributes, t_scene *scene){
	float ratio;

	if (!check_attributes_num(attributes, 3))
		return (false);
	ratio = ft_atof(attributes[1]);
	if (ratio < 0.0 || ratio > 1.0)
		return (false);
	scene->amb_light.ratio = ratio;
	if (!parse_color(attributes[2], &scene->amb_light.rgb))
		return (false);
	return (true);
}

t_object	set_cam(char **attributes){
	t_object	new;

	if (!check_attributes_num(attributes, 4))
		return ((t_object){.type = e_OBJ_NONE});
	if (!parse_position(attributes[1], &new.pos))
		return ((t_object){.type = e_OBJ_NONE});
	if (!parse_orientation(attributes[2], &new.data.cam.ori))
		return ((t_object){.type = e_OBJ_NONE});
	new.data.cam.fov = ft_atoi(attributes[3]);
	if (new.data.cam.fov < 0 || new.data.cam.fov > 180)
		return ((t_object){.type = e_OBJ_NONE});
	return (new);
}

t_object	set_light(char **attributes){
	t_object	new;

	if (!check_attributes_num(attributes, 4))
		return ((t_object){.type = e_OBJ_NONE});
	if (!parse_position(attributes[1], &new.pos))
		return ((t_object){.type = e_OBJ_NONE});
	new.data.light.ratio = ft_atof(attributes[2]);
	if (new.data.light.ratio < 0. || new.data.light.ratio > 1.)
		return ((t_object){.type = e_OBJ_NONE});
	if (!parse_color(attributes[3], &new.color))
		return ((t_object){.type = e_OBJ_NONE});
	return (new);
}
