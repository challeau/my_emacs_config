#include "../../minirt.h"

bool	set_sphere(char **attributes, t_scene *scene, uint8_t *elem_num){
	t_scene_element	new;

	if (!check_attributes_num(attributes, 4))
		return (false);
	if (!get_elem_position(attributes[1], &new.pos))
		return (false);
	new.data.sphere.r = ft_atof(attributes[2]);
	if (new.data.sphere.r < 0.)
		return (false);
	if (!get_elem_color(attributes[3], &new.color))
		return (false);
	new.type = e_ELEM_SPHERE;
	scene->elem_list[*elem_num] = new;
	*elem_num += 1;
	return (true);
}

bool	set_plane(char **attributes, t_scene *scene, uint8_t *elem_num){
	t_scene_element	new;

	if (!check_attributes_num(attributes, 4))
		return (false);
	if (!get_elem_position(attributes[1], &new.pos))
		return (false);
	if (!get_elem_orientation(attributes[2], &new.data.plane.orientation))
		return (false);
	if (!get_elem_color(attributes[3], &new.color))
		return (false);
	new.type = e_ELEM_PLANE;
	scene->elem_list[*elem_num] = new;
	*elem_num += 1;
	return (true);
}

bool	set_square(char **attributes, t_scene *scene, uint8_t *elem_num){
	t_scene_element	new;

	if (!check_attributes_num(attributes, 5))
		return (false);
	if (!get_elem_position(attributes[1], &new.pos))
		return (false);
	if (!get_elem_orientation(attributes[2], &new.data.square.orientation))
		return (false);
	new.data.square.l = ft_atof(attributes[3]);
	if (new.data.square.l < 0.)
		return (false);
	if (!get_elem_color(attributes[4], &new.color))
		return (false);
	new.type = e_ELEM_SQUARE;
	scene->elem_list[*elem_num] = new;	
	*elem_num += 1;
	return (true);
}

bool	set_cylinder(char **attributes, t_scene *scene, uint8_t *elem_num){
	t_scene_element	new;

	if (!check_attributes_num(attributes, 6))
		return (false);
	if (!get_elem_position(attributes[1], &new.pos))
		return (false);
	if (!get_elem_orientation(attributes[2], &new.data.plane.orientation))
		return (false);
	new.data.cylinder.r = ft_atof(attributes[3]);
	new.data.cylinder.l = ft_atof(attributes[4]);
	if (new.data.cylinder.r < 0. || new.data.cylinder.l < 0.)
		return (false);
	if (!get_elem_color(attributes[5], &new.color))
		return (false);
	new.type = e_ELEM_CYLINDER;
	scene->elem_list[*elem_num] = new;
	*elem_num += 1;
	return (true);

}

bool	set_triangle(char **attributes, t_scene *scene, uint8_t *elem_num){
	t_scene_element	new;
	t_vec3f		p1;
	t_vec3f		p2;
	t_vec3f		p3;

	if (!check_attributes_num(attributes, 5))
		return (false);
	if (!get_elem_position(attributes[1], &p1))
		return (false);
	if (!get_elem_position(attributes[2], &p2))
		return (false);
	if (!get_elem_position(attributes[3], &p3))
		return (false);
	new.pos = (t_vec3f){(p1.x + p2.x + p3.x) / 3, (p1.y + p2.y + p3.y) / 3,
			   (p1.z + p2.z + p3.z) / 3};
	if (!get_elem_color(attributes[4], &new.color))
		return (false);
	new.type = e_ELEM_TRIANGLE;
	scene->elem_list[*elem_num] = new;
	*elem_num += 1;
	return (true);
}
