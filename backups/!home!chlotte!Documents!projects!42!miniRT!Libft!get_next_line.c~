#include "libft.h"
#include <stdio.h>

void	ft_sep_rest(char *line, char **rest){
	size_t	i;
	size_t	nl;

	i = 0;
	nl = ft_strchr(line, '\n');
	ft_memdel(*rest);
	*rest = ft_strdup(line + nl + 1);
	line[nl] = '\0';
}

int	get_next_line(int fd, char **line)
{
	int		ret;
	char		*buff;
	static char	*rest;

	if (!line || fd < 0)
		return (-1);
	if (!rest)
		rest = ft_calloc(255);
	*line = ft_strdup(rest);
	buff = ft_calloc(255);
	while (ft_strchr(*line, '\n') < 0 && (ret = read(fd, buff, 255)) > 0)
	{
		*line = ft_strjoin(*line, buff);
		if (ft_strchr(*line, '\n') >= 0)
			break ;
		buff = ft_calloc(255);
	}
	if (ret < 0)
		return (-1);
	ret = ft_strchr(*line, '\n') >= 0 ? 1 : 0;
	ft_sep_rest(*line, &rest);
	if (ret == 0)
		ft_memdel(rest);
	return (ret);
}

/* int	main(__attribute__((unused))int ac, char **av) */
/* { */
/* 	char *line; */
/* 	int i = 1; */
/* 	int ret = 1; */
/* 	int fd; */

/* 	fd = open(av[1], O_RDONLY); */
/* 		while (ret > 0) */
/* 		{ */
/* 			ret = get_next_line(fd, &line); */
/* 			if (ret > 0) */
/* 				printf("[%d][LINE %d]: %s\n", ret, i, line); */
/* 			if (ret == 0) */
/* 				printf("[0][REACHED EOF] %s\n", line); */
/* 			if (ret == -1) */
/* 			{ */
/* 				printf("[-1][ERROR]\n"); */
/* 				return (0); */
/* 			} */
/* 			free(line); */
/* 			line = NULL; */
/* 			i++; */
/* 	} */
/* 	close(fd); */
/* 	return (0); */
/* } */

